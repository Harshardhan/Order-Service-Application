# ===================== ORDER SERVICE =====================
spring.application.name=order-service
server.port=8081

# ===================== CONFIG SERVER =====================

# ===================== EUREKA =====================
eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.hostname=order-service
eureka.instance.prefer-ip-address=true
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

# ===================== DATABASE =====================
spring.datasource.url=jdbc:mysql://mysql-order:3306/order_db
spring.datasource.username=root
spring.datasource.password=master
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# ===================== ACTUATOR =====================
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.tracing.enabled=true
# ===================== MAIL =====================
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${EMAIL_USERNAME}
spring.mail.password=${EMAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# ===================== RESILIENCE4J =====================
resilience4j.circuitbreaker.instances.consolidationService.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.consolidationService.failureRateThreshold=50
resilience4j.circuitbreaker.instances.consolidationService.waitDurationInOpenState=5000
resilience4j.circuitbreaker.instances.consolidationService.slidingWindowSize=10

# ===================== LOGGING =====================
logging.file.name=/app/logs/order-service.log
logging.level.root=INFO
logging.level.org.springframework.web=INFO
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} %-5level %logger{36} - %msg%n
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} %-5level %logger{36} - %msg%n

# ===================== KAFKA =====================
spring.kafka.bootstrap-servers=kafka:9092

# Consumer configuration
spring.kafka.consumer.group-id=order-group
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.spring.json.value.default.type=com.example.demo.dto.OrderEvent

# Producer configuration
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Admin (auto topic creation)
spring.kafka.admin.auto-create=true

# Custom topics
kafka.topic.order=order-placed-topic
kafka.topic.notification=notification-topic
management.zipkin.tracing.endpoint=http://zipkin:9411/api/v2/spans
spring.cloud.config.enabled=true
